import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/form.module.css";

import { FormEvent, useRef, useState } from "react";
import {
  ChatCompletionRequestMessage,
  CreateChatCompletionResponse,
} from "openai";
import { chatHistory } from "models/types";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [chatHistory, setChatHistory] = useState<chatHistory>([]);
  const [result, setResult] = useState<string>("");
  const inputRef = useRef<HTMLInputElement>(null);
  const submitHandler = async (event: FormEvent) => {
    event.preventDefault();
    const message = inputRef.current?.value as string;
    const newChatMessage: ChatCompletionRequestMessage = {
      content: message,
      role: "user",
    };
    const newChatHistory = [...structuredClone(chatHistory), newChatMessage];
    console.log(newChatHistory);
    if (message.length) {
      try {
        const res = await fetch("/api/chatgpt", {
          method: "POST",
          body: JSON.stringify(newChatHistory),
        });
        const resultJson = (await res.json()) as CreateChatCompletionResponse;
        const resultText = resultJson.choices[0].message?.content;
        setResult(resultText!);
        setChatHistory(newChatHistory);
      } catch (err) {
        setResult("error");
      }
    }
  };
  return (
    <>
      <Head>
        <title>Chat</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <form onSubmit={submitHandler} className={`${styles.form}`} dir="rtl">
        <input className={`${styles.input}`} type="text" ref={inputRef} />
        <p style={{ marginBottom: "1rem" }} className="result">
          {result}
        </p>
        <button className={`${styles.button}`}>send</button>
      </form>
    </>
  );
}
